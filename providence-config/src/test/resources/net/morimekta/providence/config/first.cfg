# TODO: Update to use a test-defined config model.
# This model should be made to reflect the various (and most common)
# uses for the config language (aka GCL, general config language).
#
# The language would follow the pretty serializable format, but with some
# special additions:
#
# - includes (for referencing external files, using relative path)
# - references (to any model or field value). Simply put: if a value is
#       an identifier (not a quoted string, number, object, enum or list),
# - extension (of model objects)

declaration = config.Database {
    # If the '=' char is missing, this will mutate on the original, or
    # create a new mutable instance if non already exist.
    # TODO: If a message field has a default value, use that to mutate!
    jdbc {
        url = "jdbc:h2:..."
        driver = "org.h2.Driver"
    }
    user = "myuser"
    password = "MyP4s5w0rd"
}
